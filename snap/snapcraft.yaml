---

name: parcel
version: '0.1'
summary: A mailserver wrapped in a snap
description: |
  There are a few pieces that you need to manage your own mail server.
  This snap makes the process easy, it will setup most things that
  you expect from a mail server. Because the process is automated and
  easy expect the installation to be somewhat unflexible.

base: core18
grade: devel
confinement: strict

architectures:
  - build-on: amd64
    run-on: amd64

apps:
  service:
    command: bin/service
    daemon: simple
    environment:
      LXD_DIR: /var/snap/lxd/common/lxd
      ANSIBLE_LOCAL_TEMP: /tmp
      ANSIBLE_REMOTE_TMP: /tmp
      ANSIBLE_STDOUT_CALLBACK: "json"
      ANSIBLE_RETRY_FILES_ENABLED: 0
    plugs:
      - network
      - lxd

  debug-service:
    command: bin/service debug-ansible
    environment:
      LXD_DIR: /var/snap/lxd/common/lxd
      ANSIBLE_LOCAL_TEMP: /tmp
      ANSIBLE_REMOTE_TMP: /tmp
      ANSIBLE_RETRY_FILES_ENABLED: 0
      ANSIBLE_KEEP_REMOTE_FILES: 1
      ANSIBLE_DEBUG: 1
    plugs:
      - network
      - lxd

  debug-lxd:
    command: bin/service debug-lxd
    environment:
      LXD_DIR: /var/snap/lxd/common/lxd
    plugs:
      - lxd

  destroy:
    command: bin/snapcraft-preload ansible-playbook -i $SNAP/ansible/inventory.yml $SNAP/ansible/destroy.yml
    environment:
      LXD_DIR: /var/snap/lxd/common/lxd
      ANSIBLE_LOCAL_TEMP: /tmp
      ANSIBLE_REMOTE_TMP: /tmp
    plugs:
      - network
      - lxd

  haproxy:
    command: usr/sbin/haproxy -f $SNAP_DATA/haproxy.cfg
    daemon: simple
    plugs:
      - network
      - network-bind

  www:
    command: bin/www
    daemon: simple
    plugs:
      - network
      - network-bind

  parcel:
    command: bin/mailservercmd
    plugs:
      - network

  provision-log:
    command: cat $SNAP_DATA/provision.log

  provision-err:
    command: cat $SNAP_DATA/provision.err

  trigger-provision:
    command: touch $SNAP_DATA/do-provision

parts:
  snapcraft-preload:
    # Ansible uses python multiprocessing and semaphores in /dev/shm
    # Apparmor will block these we need to redirect the calls with
    # a patched version of sergiusens snapcraft-preload:
    # https://github.com/sergiusens/snapcraft-preload/pull/29
    source: https://github.com/diddledan/snapcraft-preload.git
    source-branch: semaphore-support

    plugin: cmake
    build-packages:
      - on amd64:
        - gcc-multilib
        - g++-multilib
    stage-packages:
      - lib32stdc++6

  shell:
    plugin: nil
    stage-packages:
      - bash

  manager:
    plugin: dump
    source: manager
    stage-packages:
      - curl

  www:
    plugin: python
    source: www
    python-packages:
      - responder==1.3.2
      - dnspython==1.16.0

  ansible:
    plugin: python
    python-packages:
      - ansible==2.8.5
    stage-packages:
      - lxd
      - libatm1

  haproxy:
    plugin: nil
    stage-packages:
      - haproxy
