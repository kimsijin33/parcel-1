#!/bin/bash

filter_output() {
    # Filter out Pushing ... to ...
    cat - | sed 's/^.*Pushing[^{]*//'
}

do_ansible() {
  local extra="$1"

  $SNAP/bin/snapcraft-preload \
    ansible-playbook \
      -i $SNAP/ansible/inventory.yml \
      -i $SNAP/bin/inventory.py \
      --extra-vars @$SNAP_DATA/tls-snakeoil-key \
      $SNAP/ansible/site.yml --diff $extra
}

do_provision() {
  do_ansible 2> $SNAP_DATA/provision.err | filter_output > $SNAP_DATA/provision.tmp
  mv $SNAP_DATA/provision.tmp $SNAP_DATA/provision.log
}

regent_client_cert() {
  $SNAP/usr/bin/lxc remote add dummy-host-that-will-fail 2>/dev/null || :
}

if [ ! -e $HOME/.config/lxc/client.crt ]; then
  regent_client_cert
fi

if [[ $1 == "debug-ansible" ]]; then
  do_ansible "-vvv"
  exit 0
elif [[ $1 == "debug-lxd" ]]; then
  if [ -r /var/snap/lxd/common/lxd/unix.socket ]; then
    echo "LXD snap permissions: OK"
  else
    echo "LXD snap permissions: FAILURE"
    echo "Did you run \"sudo snap connect parcel:lxd lxd:lxd\"?"
  fi
  exit 0
fi

N=0
while [ 1 ]; do
  if [ -e $SNAP_DATA/do-provision ]; then
    if do_provision; then
      rm $SNAP_DATA/do-provision
    fi
  fi

  # Once every hour
  if [[ "$(( $N % 60 ))" == "0" ]]; then
    do_provision
  fi

  sleep 10
  N=$(( $N + 1 ))
done
