# vim: noexpandtab tabstop=4 shiftwidth=4 syntax=pfmain

compatibility_level = 2

# We use the FQDN for myhostname, and the domain
# for mydomain. These are later used in the config.
myhostname = {{ ansible_fqdn }}
mydomain = lxd

# The origin of mails sent from this server.
myorigin = {{ origin }}

# Domains to manage directly
mydestination = $myhostname localhost.$myhostname localhost

# Inform postmaster about these problems
notify_classes = resource, software, delay

# A list of thrusted SMTP clients, these IP:s/networks will be able
# to use this server to send emails out to the public internet.
mynetworks =
	127.0.0.0/8 [::ffff:127.0.0.0]/104 [::1]/128

# Soft bounce
soft_bounce = no

{% if relay_host %}
relayhost = {{ relay_host }}
{% endif %}

# Setup transport maps for mail that will be delivered directly
# and not sent to the relayhost. This is mainly used to send
# mail to mailman. Mailman then uses this server as an relayhost.
transport_maps = hash:/etc/postfix/transport_maps

# Bind to these adress and listen to these protocols
inet_interfaces = all
inet_protocols = all

# The alias database used for local delivery.
alias_maps = hash:/etc/aliases
alias_database = hash:/etc/aliases

# Use recipient delimiter for foo+bar@baz.ltd style adresses.
recipient_delimiter = +

# Do not treat owner-listname and listname-request specialy
owner_request_special = no

# Like to have a little fun! $myhostname is required!
smtpd_banner = $myhostname ESMTP MoT (Mail on Toaster)

# Disable local bail notifications with biff, we have no
# local users.
biff = no

# appending .domain is the MUA's job.
append_dot_mydomain = no

# Setup TLS and use our certs
{% if smtpd_tls_cert_file and smtpd_tls_key_file %}
smtpd_use_tls=yes
smtpd_tls_cert_file={{ smtpd_tls_cert_file }}
smtpd_tls_key_file={{ smtpd_tls_key_file }}
{% endif %}

# TLS session cache
smtpd_tls_session_cache_database = btree:${data_directory}/smtpd_scache
smtp_tls_session_cache_database = btree:${data_directory}/smtp_scache

# Setup security
smtpd_tls_security_level=may
smtpd_tls_protocols = !SSLv2, !SSLv3

# Specify dovecot and more security
smtpd_sasl_type = dovecot
smtpd_sasl_path = inet:{{ hostvars['dovecot']['ansible_default_ipv4']['address'] }}:42000
smtpd_sasl_auth_enable = yes

# Restrictions
smtpd_relay_restrictions =
	permit_mynetworks
	permit_sasl_authenticated
	reject_unauth_destination

smtpd_recipient_restrictions =
	permit_mynetworks
	reject_non_fqdn_recipient
	reject_non_fqdn_sender
	reject_unknown_sender_domain
	reject_unknown_recipient_domain
	reject_unauth_pipelining
	reject_unauth_destination
	permit_sasl_authenticated

smtpd_client_restrictions =
	reject_unknown_client_hostname
	permit_mynetworks
	permit_sasl_authenticated
	reject

# Reject if there is no HELO, this is probably a spammer
smtpd_helo_required = yes
smtpd_helo_restrictions = reject_invalid_helo_hostname

# Add some rate limits
smtpd_client_connection_rate_limit = 100
smtpd_client_message_rate_limit = 500
anvil_rate_time_unit = 60

# Milters for OpenDKIM

# Accept mail if there is an error
milter_default_action = accept

smtpd_milters = inet:{{ hostvars['opendkim']['ansible_default_ipv4']['address'] }}:12301
non_smtpd_milters = inet:{{ hostvars['opendkim']['ansible_default_ipv4']['address'] }}:12301

{% if domains %}
# Send mails to Dovecot to manage
virtual_mailbox_domains =
{% for domain in domains %}
	{{ domain }}
{% endfor %}
{% endif %}
virtual_mailbox_base = {{ mail_location }}
virtual_mailbox_maps = hash:/etc/postfix/virtual_mailbox_maps
virtual_alias_maps = hash:/etc/postfix/virtual_alias_maps
virtual_transport = lmtp:inet:{{ hostvars['dovecot']['ansible_default_ipv4']['address'] }}:24

smtpd_upstream_proxy_protocol = haproxy
